////////////////////////////////////////
// minMax.comp
// computes the min/max values for the volume
////////////////////////////////////////

#version 430

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;	// 64 threads

// input Dicom volume
layout(r16, binding = 0) uniform image3D volume;

// to calculate the min/max value
layout(std430, binding = 1) buffer tempBuffer {
	uint[2] minMaxData;
};

uniform uint NUM_BINS;

void main() {

	// calculate the max and min for the volume 
	uvec3 index = gl_GlobalInvocationID.xyz;
	float x = imageLoad(volume, ivec3(index)).x;
	uint val = uint(x * NUM_BINS);

	atomicMin(minMaxData[0], val);
	atomicMax(minMaxData[1], val);

}