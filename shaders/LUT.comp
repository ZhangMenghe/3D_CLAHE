#version 430
layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;	// 64 threads

// input Dicom volume
layout(r16, binding = 0) uniform image3D volume;

// output LUT texture
layout(r16, binding = 1) uniform image1D LUT;
layout(rg16, binding = 2) uniform image2D tempBuffer;



// compute the LUT
void main() {

	shared float sharedMin = 0;
	shared float sharedMax = 0;

	uvec3 index = gl_GlobalInvocationID.xyz;
	float imgValue = imageLoad(volume, index);

	// calculate the min/max within Group
	sharedMin = min(sharedMin, imgValue);
	sharedMax = max(sharedMax, imgValue);
	memoryBarrierShared();

	// write the group min/max to tempBuffer
	if (gl_LocalInvocationID == ivec3(0)){
		imageStore(tempBuffer, gl_WorkGroupID, vec2(sharedMin, sharedMax));
	}
	memoryBarrierImage();

	// calculate complete min/mx
	if (index == vec3(0)) {
		
	}

}